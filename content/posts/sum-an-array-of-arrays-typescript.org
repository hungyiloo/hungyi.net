#+TITLE: Sum an Array of Arrays Using JavaScript or TypeScript
#+SLUG: sum-an-array-of-arrays-typescript
#+DATE: 2021-05-07T20:34:01+08:00
#+DESCRIPTION: A demonstration of using JavaScript/TypeScript to sum up the columns of a bunch of arrays, without having to write a for-loop or while-loop.

I was recently asked what was the best way to sum up an array of arrays of numbers by their respective columns. While I'm not the best code golfer, I /am/ rather lazy, so I do have some terse solutions up my sleeve.

# more

Here's my quick and dirty solution, using [[url_for:posts,slug=reduce-swiss-army-knife][JavaScript's Reduce: A Swiss Army Knife for Arrays]]:

#+name: sum-an-array-of-arrays
#+begin_src typescript :exports both :results code :cache yes
// The input data looks like this,
// with each nested array having the same shape.
const input = [
  [1,2,3,4],
  [2,2,2,2],
  [0,2,4,6],
]

// To show you the power of flex- er, I mean reduce()
const result = input.reduce(
  (acc, curr) => acc.map((x, i) => x + curr[i])
)

console.log(result);
#+end_src

Which prints the result:

#+RESULTS[ece53d9e88d087e48bf69c2622f50a0c41c34db6]: sum-an-array-of-arrays
#+begin_src typescript
[ 3, 6, 9, 12 ]
#+end_src
